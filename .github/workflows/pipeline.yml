name: Main project workflow

on: 
    push:
        branches:
            - main
            - develop
        paths-ignore:
            - 'README.md'
            - 'CHANGELOG.md'
            - 'LICENSE'

jobs: 
    BuildAndTest:
        strategy:
            matrix:
                os: [ ubuntu-latest ]
                java-version: [ 11, 16, 17, 18]
        runs-on: ${{ matrix.os }}
        steps:
          - run: echo "Hello World!"
          - name: Checkout
            uses: actions/checkout@v3
          - uses: actions/setup-java@v1
            with:
              java-version: ${{ matrix.java-version }}
          - name: Setup kotlin
            uses: fwilhe2/setup-kotlin@main
            with:
              version: 1.8.20
          - name: gradle build
            run: ./gradlew build
          - name: Docker compose
            uses: isbang/compose-action@v1.4.1
            with:
              down-flags: "--volumes"
              services: |
                dossier_service
                driving_service
                exam_service
                doctor_service
          - name: Sleep for 5 seconds
            uses: GuillaumeFalourd/wait-sleep-action@v1
            with:
              time: '5'
          - name: Run tests
            run: ./gradlew SystemTester:run
    release:
        if: github.ref == 'refs/heads/main'
        needs: BuildAndTest
        runs-on: ubuntu-latest
        concurrency:
          group: release
          cancel-in-progress: false
        steps:
          - name: Checkout
            uses: actions/checkout@v3
          - name: Release
            env:
              GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
            run: |
              npm install
              npx semantic-release
            id: ver
        outputs:
          newVersion: ${{ steps.ver.outputs.nextVer }}
    SwaggerHubPublish:
      needs: release
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3
        - uses: ./.github/workflows/swaggerhub-publish
          with:
            token: ${{ secrets.SWAGGERHUB_TOKEN }}
            version: ${{ needs.release.outputs.newVersion }}
            type: create
